<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="siddhi-distribution-test-suite" duration-ms="80790" started-at="2020-03-19T07:00:44Z" finished-at="2020-03-19T07:02:05Z">
    <groups>
    </groups>
    <test name="stream-processor-core" duration-ms="80790" started-at="2020-03-19T07:00:44Z" finished-at="2020-03-19T07:02:05Z">
      <class name="siddhi.test.suite.TemperatureAlertAppIntegrationTests">
        <test-method status="PASS" signature="setUpCluster()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppIntegrationTests@588307f7]" name="setUpCluster" is-config="true" duration-ms="57441" started-at="2020-03-19T07:01:01Z" finished-at="2020-03-19T07:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpCluster -->
        <test-method status="PASS" signature="testAppOutput()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppIntegrationTests@588307f7]" name="testAppOutput" duration-ms="307" started-at="2020-03-19T07:01:58Z" finished-at="2020-03-19T07:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppOutput -->
        <test-method status="PASS" signature="testMessageConsumption()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppIntegrationTests@588307f7]" name="testMessageConsumption" duration-ms="2" started-at="2020-03-19T07:01:58Z" finished-at="2020-03-19T07:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessageConsumption -->
        <test-method status="PASS" signature="testMessagePublishingWithSiddhi()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppIntegrationTests@588307f7]" name="testMessagePublishingWithSiddhi" duration-ms="112" started-at="2020-03-19T07:01:58Z" finished-at="2020-03-19T07:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMessagePublishingWithSiddhi -->
        <test-method status="PASS" signature="testDBPersistence()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppIntegrationTests@588307f7]" name="testDBPersistence" duration-ms="1000" started-at="2020-03-19T07:01:59Z" finished-at="2020-03-19T07:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDBPersistence -->
        <test-method status="PASS" signature="shutdownCluster()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppIntegrationTests@588307f7]" name="shutdownCluster" is-config="true" duration-ms="5176" started-at="2020-03-19T07:02:00Z" finished-at="2020-03-19T07:02:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutdownCluster -->
      </class> <!-- siddhi.test.suite.TemperatureAlertAppIntegrationTests -->
      <class name="siddhi.test.suite.TemperatureAlertAppUnitTests">
        <test-method status="PASS" signature="setUpTest()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppUnitTests@61d34b4]" name="setUpTest" is-config="true" duration-ms="25" started-at="2020-03-19T07:00:44Z" finished-at="2020-03-19T07:00:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpTest -->
        <test-method status="FAIL" signature="testMoniteredFilter()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppUnitTests@61d34b4]" name="testMoniteredFilter" duration-ms="1278" started-at="2020-03-19T07:00:44Z" finished-at="2020-03-19T07:00:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at siddhi.test.suite.TemperatureAlertAppUnitTests$1.receive(TemperatureAlertAppUnitTests.java:72)
at io.siddhi.core.query.output.callback.QueryCallback.send(QueryCallback.java:86)
at io.siddhi.core.query.output.callback.QueryCallback.receiveStreamEvent(QueryCallback.java:81)
at io.siddhi.core.query.output.ratelimit.OutputRateLimiter.sendToCallBacks(OutputRateLimiter.java:86)
at io.siddhi.core.query.output.ratelimit.PassThroughOutputRateLimiter.process(PassThroughOutputRateLimiter.java:44)
at io.siddhi.core.query.selector.QuerySelector.process(QuerySelector.java:97)
at io.siddhi.core.query.processor.filter.FilterProcessor.process(FilterProcessor.java:58)
at io.siddhi.core.query.input.ProcessStreamReceiver.processAndClear(ProcessStreamReceiver.java:182)
at io.siddhi.core.query.input.ProcessStreamReceiver.process(ProcessStreamReceiver.java:89)
at io.siddhi.core.query.input.ProcessStreamReceiver.receive(ProcessStreamReceiver.java:178)
at io.siddhi.core.stream.StreamJunction.sendData(StreamJunction.java:268)
at io.siddhi.core.stream.StreamJunction.access$200(StreamJunction.java:61)
at io.siddhi.core.stream.StreamJunction$Publisher.send(StreamJunction.java:501)
at io.siddhi.core.stream.input.InputDistributor.send(InputDistributor.java:49)
at io.siddhi.core.stream.input.InputEntryValve.send(InputEntryValve.java:75)
at io.siddhi.core.stream.input.InputHandler.send(InputHandler.java:52)
at siddhi.test.suite.TemperatureAlertAppUnitTests.testMoniteredFilter(TemperatureAlertAppUnitTests.java:82)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMoniteredFilter -->
        <test-method status="PASS" signature="testSiddhiRunnerStartup()[pri:0, instance:siddhi.test.suite.TemperatureAlertAppUnitTests@61d34b4]" name="testSiddhiRunnerStartup" duration-ms="15394" started-at="2020-03-19T07:00:45Z" finished-at="2020-03-19T07:01:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSiddhiRunnerStartup -->
      </class> <!-- siddhi.test.suite.TemperatureAlertAppUnitTests -->
    </test> <!-- stream-processor-core -->
  </suite> <!-- siddhi-distribution-test-suite -->
</testng-results>
